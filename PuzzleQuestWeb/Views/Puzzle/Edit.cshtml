@model PuzzleQuestWeb.Models.Puzzle

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Puzzle</legend>

        @Html.HiddenFor(model => model.PuzzleId)

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleName)
            @Html.ValidationMessageFor(model => model.PuzzleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleType)
            @Html.ValidationMessageFor(model => model.PuzzleType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleText)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PuzzleText, 20, 80, null)
            @Html.ValidationMessageFor(model => model.PuzzleText)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleSolutionKeyword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleSolutionKeyword)
            @Html.ValidationMessageFor(model => model.PuzzleSolutionKeyword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleSolutionText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleSolutionText)
            @Html.ValidationMessageFor(model => model.PuzzleSolutionText)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleResourceFileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleResourceFileName)
            @Html.ValidationMessageFor(model => model.PuzzleResourceFileName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PuzzleActivationCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PuzzleActivationCode)
            @Html.ValidationMessageFor(model => model.PuzzleActivationCode)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@{
    var sortedHints = Model.Hints.OrderBy(h => h.HintOrder).ToList();
    int hintNumber = 1;
}

<h3>Hints</h3>
<table>
@foreach (var hint in sortedHints)
{
    <tr>
    <td>
        @Html.ActionLink("Edit", "Edit", "Hint", new { id = hint.HintId }, null)&nbsp;|&nbsp;@Html.ActionLink("Delete", "Delete", "Hint", new { id = hint.HintId }, null)
    </td>
    <td>
        @Html.Raw(hint.HintOrder.ToString())
    </td>
    <td>
        @Html.Raw(hint.HintText.Replace("\r\n", "<br>"))
    </td>
    </tr>
    hintNumber++;
}
</table>

<p>
    @Html.ActionLink("Add hint", "Create", "Hint", new { puzzleId = Model.PuzzleId, sortOrder = sortedHints.Count }, null)
</p>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
